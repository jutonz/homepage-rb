name: "Ruby on Rails CI"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
      TEST_KEY: ${{ secrets.TEST_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - run: sudo apt-get update && sudo apt-get install imagemagick libvips
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: echo -n $TEST_KEY > config/credentials/test.key
      - run: bin/rails db:setup
      - run: bin/rails assets:precompile
      - run: bin/rspec

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: bundle exec standardrb
      - run: ./bin/brakeman

  deploy:
    #if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      KAMAL_REGISTRY_USERNAME: ${{ secrets.KAMAL_REGISTRY_USERNAME }}
      KAMAL_REGISTRY_PASSWORD: ${{ secrets.KAMAL_REGISTRY_PASSWORD }}
    concurrency:
      group: deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        env:
          BUNDLE_GEMFILE: ./kamal/Gemfile
        with:
          bundler-cache: true
      - uses: azure/setup-kubectl@v4
      - name: Set the Kubernetes context
        uses: azure/k8s-set-context@v4
        with:
          method: service-account
          k8s-url: ${{ secrets.KUBERNETES_URL }}
          k8s-secret: ${{ secrets.KUBERNETES_SECRET }}
      - run: kubectl get deployments -nhomepage-rb
      - run: kubectl set image deployment/web web=jutonz/homepage-rb:latest -nhomepage-rb
      # - uses: actions-hub/kubectl@master
      #   env:
      #     KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      #   with:
      #     args: get pods
      - run: bin/kamal build create
      - run: bin/kamal build push
